version: '3.4'

# This is an example docker-compose file to quickly test an IPFS Cluster with multiple peers on a contained environment.
# 这是一个示例docker-compose文件，用于在包含的环境中快速测试具有多个对等项的IPFS群集。

# It runs 3 cluster peers (cluster0, cluster1...) attached to go-ipfs daemons (ipfs0, ipfs1...) using the CRDT consensus component.
#  Cluster peers autodiscover themselves using mDNS on the docker internal network.

# 它使用CRDT共识组件运行连接到go-ipfs守护程序（ipfs0，ipfs1 ...）的3个集群对等项（cluster0，cluster1 ...）。
# 集群对等体使用docker内部网络上的mDNS自动发现自己。
#
#

# To interact with the cluster use "ipfs-cluster-ctl" (the cluster0 API port is
# exposed to the locahost. You can also "docker exec -ti cluster0 sh" and run
# it from the container. "ipfs-cluster-ctl peers ls" should show all 3 peers a few
# seconds after start.

# 要与群集进行交互，请使用“ ipfs-cluster-ctl”（cluster0 API端口暴露给locahost。
# 您也可以“ docker exec -ti cluster0 sh”并从容器中运行它。“ ipfs-cluster- ctl peers ls”应在启动后几秒钟内显示所有3个对等体。


#
# For persistance, a "compose" folder is created and used to store configurations and states.
## This can be used to edit configurations in subsequent runs. It looks as follows:

# 为了保持持久性，创建了一个“ compose”文件夹，用于存储配置和状态。
# 可用于在后续运行中编辑配置。它看起来如下：

# 为了保持持久性，创建了一个“ compose”文件夹，用于存储配置和状态。这可用于在后续运行中编辑配置。它看起来如下所示：


#
# compose/
# |-- cluster0
# |-- cluster1
# |-- ...
# |-- ipfs0
# |-- ipfs1
# |-- ...
#
# During the first start, default configurations are created for all peers.
# 在首次启动期间，将为所有对等方创建默认配置。
services:
  ##################################################################################
  ## Cluster PEER 0 ################################################################
  ##################################################################################

  ipfs0:
    container_name: ipfs0
    image: ipfs/go-ipfs:release
    ports:
       - "4001:4001" # ipfs swarm - expose if needed/wanted
       - "5001:5001" # ipfs api - expose if needed/wanted
       - "8080:8080" # ipfs gateway - expose if needed/wanted
    volumes:
      - ./compose/ipfs0:/data/ipfs

  cluster0:
    container_name: cluster0
    image: ipfs/ipfs-cluster:latest
    depends_on:
      - ipfs0
    environment:
      CLUSTER_PEERNAME: cluster0
      CLUSTER_SECRET: ${CLUSTER_SECRET} # From shell variable if set
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs0/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '*' # Trust all peers in Cluster
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094 # Expose API
      CLUSTER_MONITORPINGINTERVAL: 2s # Speed up peer discovery
    ports:
      # Open API port (allows ipfs-cluster-ctl usage on host)
      - "127.0.0.1:9094:9094"
      # The cluster swarm port would need  to be exposed if this container
      # was to connect to cluster peers on other hosts.
      # But this is just a testing cluster.
      # - "9096:9096" # Cluster IPFS Proxy endpoint
    volumes:
      - ./compose/cluster0:/data/ipfs-cluster

  ##################################################################################
  ## Cluster PEER 1 ################################################################
  ##################################################################################

  # 有关注释，请参阅集群PEER 0（在此处和下面均已删除）
  # 由于当前为单机部署，所以下面省略了一些参数
  # 注意：集群只是管理单位，而私有组织的划分根据 ~/.ipfs/swarm.key 下的密钥来进行 (这里没有指定，所以默认属于一个组织)
  ipfs1:
    container_name: ipfs1
    image: ipfs/go-ipfs:release
    ports:
      - "4101:4001" # ipfs swarm - expose if needed/wanted
      - "5101:5001" # ipfs api - expose if needed/wanted
      - "8180:8080" # ipfs gateway - expose if needed/wanted
    volumes:
      - ./compose/ipfs1:/data/ipfs

  cluster1:
    container_name: cluster1
    image: ipfs/ipfs-cluster:latest
    depends_on:
      - ipfs1
    environment:
      CLUSTER_PEERNAME: cluster1
      CLUSTER_SECRET: ${CLUSTER_SECRET}
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs1/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '*'
      CLUSTER_MONITORPINGINTERVAL: 2s # Speed up peer discovery
    # ports:
      # Open API port (allows ipfs-cluster-ctl usage on host)
      # - "127.0.0.1:9194:9094"
      # The cluster swarm port would need  to be exposed if this container
      # was to connect to cluster peers on other hosts.
      # But this is just a testing cluster.
      # - "9196:9096" # Cluster IPFS Proxy endpoint
    volumes:
      - ./compose/cluster1:/data/ipfs-cluster

  # ##################################################################################
  # ## Cluster PEER 2 ################################################################
  # ##################################################################################

  # # 有关注释，请参阅集群PEER 0（在此处和下面均已删除）
  # ipfs2:
  #   container_name: ipfs2
  #   image: ipfs/go-ipfs:release
  #   volumes:
  #     - ./compose/ipfs2:/data/ipfs

  # cluster2:
  #   container_name: cluster2
  #   image: ipfs/ipfs-cluster:latest
  #   depends_on:
  #     - ipfs2
  #   environment:
  #     CLUSTER_PEERNAME: cluster2
  #     CLUSTER_SECRET: ${CLUSTER_SECRET}
  #     CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs2/tcp/5001
  #     CLUSTER_CRDT_TRUSTEDPEERS: '*'
  #     CLUSTER_MONITORPINGINTERVAL: 2s # Speed up peer discovery
  #   volumes:
  #     - ./compose/cluster2:/data/ipfs-cluster

# 要添加更多对等设备，请复制PEER 1并将其重命名为ipfs2，cluster2。